
uncomment block:
- to pass tests



PHPUnit_Framework_MockObject_Generator
generateMockedMethodDefinition
template->setVar
'modifier' => "#[\\ReturnTypeWillChange]\n" . $modifier,



Error:
    Function ReflectionType::__toString() is deprecated
File:
    vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Generator.php
Replace:
    (string) $parameter->getType()
With:
    backport_reflection_type_cast_string($parameter->getType())
Line:
    - 1190
    - 1195



Error:
    Method ReflectionParameter::isArray() is deprecated
File:
    vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Generator.php
Replace:
    $parameter->isArray()
With:
    backport_reflection_parameter_declares_array($parameter)
Line:
    - 1196



Error:
    Method ReflectionParameter::isCallable() is deprecated
File:
    vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Generator.php
Replace:
    $parameter->isCallable()
With:
    backport_reflection_parameter_declares_callable($parameter)
Line:
    - 1198



Error:
    Method ReflectionParameter::getClass() is deprecated
File:
    vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Generator.php
Replace:
    $parameter->getClass()
With:
    backport_reflection_parameter_get_class($parameter)
Line:
    - 1202



File:
    vendor/phpunit/phpunit-mock-objects/src/Framework/MockObject/Generator.php
Method:
    evalClass
Replace:
    eval($code);
With:
    eval(preg_replace(['/\?(?=mixed\s+\$\w+\b)/', '/\?(?=\?)/'], '', $code));
Line: 345



File:
    vendor/phpunit/phpunit/src/Util/Configuration.php
Method:
    __clone
Replace:
    final private
With:
    private
Line: 162






\Doctrine\DBAL\Driver\Connection
    # public function query()

\Doctrine\DBAL\Driver\ResultStatement
    # public function setFetchMode()
    # public function fetchAll()

\Doctrine\DBAL\Driver\PDOConnection
    use \Doctrine\Patch\PDOConnectionTrait;
    public function query() -> public function _query()

\Doctrine\DBAL\Driver\PDOStatement
    use \Doctrine\Patch\PDOStatementTrait;
    public function setFetchMode() -> public function _setFetchMode()
    public function fetchAll() -> public function _fetchAll()






CurlMultiHandler::__destruct()
    @curl_multi_close



namespace Symfony\Component\HttpFoundation;
class Response
    protected function ensureIEOverSSLCompatibility(Request $request)
    {
        $headersContentDisposition = $this->headers->get('Content-Disposition');
        if (false !== stripos(isset($headersContentDisposition) ? $headersContentDisposition : '', ...



//=========================


(function[^\(]+[^\)]+\))(:.*?)(;\{)?$
$1/*$2*/$3

   1     2   3                             4   5                                    6    7     8    9
\n( {4})( *)(.*?function[^\(]+.*?[\(,]\s*)(\?)(string|int|float|bool|mixed)(\s+)(&?\$)(\w+)(\s*[^\{]+?\{)
\n$1$2$3/*$4$5$6*/$7$8 = null$9\n$1$2$1\$$8 = cast_to_$5(\$$8, null);\n

   1     2   3                             4                                    5    6     7    8
\n( {4})( *)(.*?function[^\(]+.*?[\(,]\s*)(string|int|float|bool|mixed)(\s+)(&?\$)(\w+)(\s*=\s*null\b[^\{]+?\{)
\n$1$2$3/*$4$5*/$6$7$8\n$1$2$1\$$7 = cast_to_$4(\$$7, null);\n

   1     2   3                             4                                    5    6     7    8
\n( {4})( *)(.*?function[^\(]+.*?[\(,]\s*)(string|int|float|bool|mixed)(\s+)(&?\$)(\w+)(\s*[^\{]+?\{)
\n$1$2$3/*$4$5*/$6$7$8\n$1$2$1\$$7 = cast_to_$4(\$$7);\n

 1                          2   3                 4
(function[^\(]+.*?[\(,]\s*)(\?)(\\?\w+\s+&?\$\w+)(,|\))
$1/*$2*/$3 = null$4


   1     2   3                             4   5             6    7     8    9
\n( {4})( *)(.*?function[^\(]+.*?[\(,]\s*)(\?)(\\?Throwable)(\s+)(&?\$)(\w+)(\s*[^\{]+?\{)
\n$1$2$3/*$4$5$6*/$7$8 = null$9\n$1$2$1backport_type_throwable(\$$8, null);\n

   1     2   3                             4             5    6     7    8
\n( {4})( *)(.*?function[^\(]+.*?[\(,]\s*)(\\?Throwable)(\s+)(&?\$)(\w+)(\s*=\s*null\b[^\{]+?\{)
\n$1$2$3/*$4$5*/$6$7$8\n$1$2$1backport_type_throwable(\$$7, null);\n

   1     2   3                             4             5    6     7    8
\n( {4})( *)(.*?function[^\(]+.*?[\(,]\s*)(\\?Throwable)(\s+)(&?\$)(\w+)(\s*[^\{]+?\{)
\n$1$2$3/*$4$5*/$6$7$8\n$1$2$1backport_type_throwable(\$$7);\n

            1   2                3             4    5      6
(?<=[;}])\n( +)(\}\s+catch\s+\()(\\?Throwable)(\s+)(\$\w+)(\)\s+\{)
\n$1$2\\Exception$4$5$6\n$1$2\\Error$4$5$6\n$1$2$3$4$5$6\n$1}\n\n$1if (isset($5)) {


((?:self::\$?|\$)\w+(?:->\w+)*(?:\[[^\]]+\])?)\s+\?\?
isset($1) ? $1 :

((?:self::\$?|\$)\w+(?:->\w+)*)(\[[^\]]+\])(\[[^\]]+\])\s+\?\?
isset($1$2) && isset($1$2$3) ? $1$2$3 :

(foreach.* as\s+)\[([^\]]+?)\](\))
$1list($2)$3

([{};]\s+)\[([^\]]+?)\](\s*=)
$1list($2)$3

((?:self::\$?|\$)\w+(?:->\w+)*)(\[[^\]]+\])+\s+\?\?
// ?



(\n\s+)(private |protected |public )(const\b)
$1/*$2*/$3


(\bfunction (?:for|eval|finally|try|catch|default|class|if|use|include)\b)\(
$1_(

->\s*(?:for|eval|finally|try|empty|catch|class|if|use|include)\b\(


\n    (public|protected|private) +((?!(?:\$|static func|func))\S+\s+)
\n    $1 /*$2*/
